8월 1일 배운내용 정리.
*개인사정으로 인한 지각으로 오후부터 수업시작.

1. filebrowser를 통해 컴퓨터 파일을 공유하는 법을 배움.

1-1. powershell을 '관리자' 권한으로 실행
1-2. filebrowser 사이트로 들어가, binary에 적혀있는
iwr -useb https://raw.githubusercontent.com/filebrowser/get/master/get.ps1 | iex
filebrowser -r /path/to/your/files 를 powershell에 입력.

1-3. 입력 후, 호스트 주소와 연동되면서 공유 사이트가 열림

+ 비밀번호가 랜덤으로 부여되는데, 이는
filebrowser users update admin --password "새 비밀번호" 를 통해
비밀번호를 재지정할 수 있음. (새비밀번호 칸에 원하는 비밀번호를 입력, 12자 이상)

++ 아예 새로운 사용자를 만들어서 쓸 수 있음.
명령어: filebrowser users add "새아이디" "새 비밀번호" --perm.admin

1-4 공유를 끊고 싶다면, powershell에서 ctrl + c를 눌러 끌 수 있음.

2.  aruco marker와 비전카메라를 이용한 3차원 공간에서 거리와 자세 추정하는 방법을 배움.
-> 참고 및 사용한 코드는 8.1 폴더에 있음.

2-1. 카메라 켈리브레이션 사진 촬영

(photo.py) 
카메라 알고리즘.
비디오 캡처 객체를 생성하고 카메라 프레임을 읽음.
읽은 프레임을 화면에 표시 후 키입력을 받아 촬영 or 종료 결정.
촬영 키가 눌리면 현재 프레임을 저장 후 프레임을 이미지 파일로 저장함.

2-2. 카메라 켈리브레이션 진행
(calibration3.py)
-> 켈리브레이션: 카메라의 내부 파라미터(예: 초점 거리, 왜곡 계수)와
외부 파라미터(카메라 위치 및 방향)를 추정하는 과정
이를 통해 비디오를 보정함.

다양한 체커보드 크기로 테스트해보는 함수 작성.
이미지 품질(대비, 블러 정도) 분석, 
전처리 방법 활용(히스토그램 평활화, 가우시안 블러, 이진화, 적응적 이진화),
체커보드 검출 시도,
결과를 시각화하고 이미지 크기 조정(600*800),
첫 번째 이미지로 체커보드 크기 자동 감지, 가장 많이 검출된 크기 선택,
켈리브레이션 진행, 3D 점의 세계 좌표 정의, 이후 카메라 켈리브레이션 수행.

2-3. 아루코마커 인식
(scanArucoMarker2.py)
실시간으로 비디오를 받아 아루코마커를 인식하는 알고리즘.
단일 마커의 포즈를 추정하는 함수 작성.
-> 마커의 3D 좌표를 정의, 이미지 좌표(2D), PnP 문제 해결

실시간으로 비디오를 받아 아루코마커를 검출 & 3D 포즈를 추정하는 함수 작성.
-> 켈리브레이션 데이터 추출, 아루코 검출기 설정, 마커 크기, 카메라 세팅, 이미지 왜곡 보정

2-4. 거리에 따른 경고 메시지 출력
(distanceDetection2.py)
물체(아루코마커)와 카메라와의 거리에 따라 출력하는 메시지가 다른 알고리즘.
(2-3 아루코마커 인식에 거리 개념을 추가한 내용.)

마커와 카메라 간의 거리가 30cm 이하인 경우 STOP! 메시지 표시
30cm를 넘어가는 경우 GO! 메시지 표시.

